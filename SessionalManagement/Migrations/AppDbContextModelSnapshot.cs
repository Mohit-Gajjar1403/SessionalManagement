// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SessionalManagement.Models;

namespace SessionalManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SessionalManagement.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Sessional 1",
                            Semester = 5
                        },
                        new
                        {
                            Id = -2,
                            Name = "Sessional 2",
                            Semester = 5
                        },
                        new
                        {
                            Id = -3,
                            Name = "Sessional 3",
                            Semester = 5
                        });
                });

            modelBuilder.Entity("SessionalManagement.Models.Marks", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("MarksObtained")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "ExamId", "SubjectId");

                    b.HasIndex("ExamId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            StudentId = -1,
                            ExamId = -1,
                            SubjectId = -1,
                            MarksObtained = 30
                        },
                        new
                        {
                            StudentId = -1,
                            ExamId = -1,
                            SubjectId = -2,
                            MarksObtained = 32
                        },
                        new
                        {
                            StudentId = -1,
                            ExamId = -1,
                            SubjectId = -3,
                            MarksObtained = 31
                        },
                        new
                        {
                            StudentId = -2,
                            ExamId = -1,
                            SubjectId = -1,
                            MarksObtained = 29
                        },
                        new
                        {
                            StudentId = -2,
                            ExamId = -1,
                            SubjectId = -2,
                            MarksObtained = 33
                        },
                        new
                        {
                            StudentId = -2,
                            ExamId = -1,
                            SubjectId = -3,
                            MarksObtained = 31
                        },
                        new
                        {
                            StudentId = -3,
                            ExamId = -1,
                            SubjectId = -1,
                            MarksObtained = 27
                        },
                        new
                        {
                            StudentId = -3,
                            ExamId = -1,
                            SubjectId = -2,
                            MarksObtained = 34
                        },
                        new
                        {
                            StudentId = -3,
                            ExamId = -1,
                            SubjectId = -3,
                            MarksObtained = 35
                        });
                });

            modelBuilder.Entity("SessionalManagement.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Web Application Developement(WAD)",
                            Semester = 5
                        },
                        new
                        {
                            Id = -2,
                            Name = "Advanced Technologies(AT)",
                            Semester = 5
                        },
                        new
                        {
                            Id = -3,
                            Name = "Operating System",
                            Semester = 5
                        });
                });

            modelBuilder.Entity("SessionalManagement.Models.TeacherSubjects", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjects");

                    b.HasData(
                        new
                        {
                            TeacherId = -4,
                            SubjectId = -1
                        },
                        new
                        {
                            TeacherId = -5,
                            SubjectId = -2
                        },
                        new
                        {
                            TeacherId = -5,
                            SubjectId = -3
                        });
                });

            modelBuilder.Entity("SessionalManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("SessionalManagement.Models.Student", b =>
                {
                    b.HasBaseType("SessionalManagement.Models.User");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Email = "student001@ddu.in",
                            Name = "Mohit Gajjar",
                            Password = "student001",
                            Role = 0,
                            Semester = 1
                        },
                        new
                        {
                            Id = -2,
                            Email = "student002@ddu.in",
                            Name = "Kavan Dave",
                            Password = "student002",
                            Role = 0,
                            Semester = 2
                        },
                        new
                        {
                            Id = -3,
                            Email = "student003@student.com",
                            Name = "Vismay Chaudhari",
                            Password = "student003",
                            Role = 0,
                            Semester = 1
                        });
                });

            modelBuilder.Entity("SessionalManagement.Models.Teacher", b =>
                {
                    b.HasBaseType("SessionalManagement.Models.User");

                    b.HasDiscriminator().HasValue("Teacher");

                    b.HasData(
                        new
                        {
                            Id = -4,
                            Email = "faculty001@ddu.in",
                            Name = "AAM",
                            Password = "faculty001",
                            Role = 1
                        },
                        new
                        {
                            Id = -5,
                            Email = "faculty002@ddu.in",
                            Name = "SPS",
                            Password = "faculty002",
                            Role = 1
                        });
                });

            modelBuilder.Entity("SessionalManagement.Models.Marks", b =>
                {
                    b.HasOne("SessionalManagement.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SessionalManagement.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SessionalManagement.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SessionalManagement.Models.TeacherSubjects", b =>
                {
                    b.HasOne("SessionalManagement.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SessionalManagement.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
